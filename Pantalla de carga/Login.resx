<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uVxb4YiuLlgAAAAASUVORK5CYII=
</value>
  </data>
</root>